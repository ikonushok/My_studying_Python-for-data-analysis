{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Копия блокнота \"ДЗ-2.8.3-Light.ipynb\"","provenance":[{"file_id":"18TXF-C2UFFIHjZ626v-Qh8EVvh6LHqNa","timestamp":1594824793812}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"MH-3kVwvJYeP","colab_type":"text"},"source":["# Курс \"Python для анализа данных\"\n","\n","---\n","# Домашнее задание LIGHT\n","#2.8.3 Объектно-ориентированное программирование как ключевой элемент языка Python"]},{"cell_type":"code","metadata":{"id":"fGNSU6VDMU7f","colab_type":"code","colab":{}},"source":["# Запустите код ниже для старта, но не правьте во избежании ошибок проверки!\n","_HOMEWORK_NAME_ = '2.8.3_LIGHT'\n","_HOMEWORK_ANSWER_DICT_ = dict()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xp_DlvMXJ8Ed","colab_type":"text"},"source":["## ФИО участника"]},{"cell_type":"code","metadata":{"id":"RHUt9t1XMw9a","colab_type":"code","colab":{}},"source":["# Введите ваше имя и фамилию в соответствующую позицию 'NAME' и 'LAST_NAME'!\n","# Пример: Иван Иванов - 'NAME' : 'Иван', 'LAST_NAME' : 'Иванов'\n","_NAME_SERNAME_ = {\n","    'NAME' : 'ILIA',\n","    'LAST_NAME' : 'KONUSHOK'\n","}"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gMwyKhlQJ1mf","colab_type":"text"},"source":["## Задание 1"]},{"cell_type":"markdown","metadata":{"id":"Owu684lKKrjJ","colab_type":"text"},"source":["**Условие:** \n","\n","По материалам блокнота с занятия установите все родительские классы для класса ```IOError```.\n","\n","**Оценка в баллах:** 3"]},{"cell_type":"markdown","metadata":{"id":"OCTvo3fHLaaJ","colab_type":"text"},"source":["**Решение:**"]},{"cell_type":"code","metadata":{"id":"f9_8IGndLeRO","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"executionInfo":{"status":"ok","timestamp":1594903851885,"user_tz":-180,"elapsed":1492,"user":{"displayName":"Ilia Konushok","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgUrzLbotAvEh6mMq5H6nX20COBH_r_qBrlpfSYQ=s64","userId":"00607095919891895402"}},"outputId":"4a7fea8f-12d7-45b5-bd24-cc4e2728a370"},"source":["# Посмотрим на все родительские классы для класса IOError\n","print(IOError.__bases__ , \"Exception is \" , Exception.__doc__)\n","print(Exception.__bases__ , \"BaseException is \" , BaseException.__doc__)\n","print(BaseException.__bases__ , \"<object> is \" , object.__doc__)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(<class 'Exception'>,) Exception is  Common base class for all non-exit exceptions.\n","(<class 'BaseException'>,) BaseException is  Common base class for all exceptions\n","(<class 'object'>,) <object> is  The most base type\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-O3Gt0010LAx","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1594906290600,"user_tz":-180,"elapsed":718,"user":{"displayName":"Ilia Konushok","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgUrzLbotAvEh6mMq5H6nX20COBH_r_qBrlpfSYQ=s64","userId":"00607095919891895402"}},"outputId":"97c9295e-a2a4-4628-8ffa-9844fcc3e7f4"},"source":["# Или так:\n","print(IOError.__mro__)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(<class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"oNdtT8Wvumjm","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1594904736417,"user_tz":-180,"elapsed":1071,"user":{"displayName":"Ilia Konushok","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgUrzLbotAvEh6mMq5H6nX20COBH_r_qBrlpfSYQ=s64","userId":"00607095919891895402"}},"outputId":"2bcd2212-3c05-4862-b3a2-5a8c4554fde5"},"source":["# Или так:\n","# Проверим прородителей у основных типов данных\n","import inspect\n","\n","# Типы данных\n","print(inspect.getmro(IOError))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(<class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"4OCMZcL7v5Ij","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"executionInfo":{"status":"ok","timestamp":1594905055072,"user_tz":-180,"elapsed":699,"user":{"displayName":"Ilia Konushok","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgUrzLbotAvEh6mMq5H6nX20COBH_r_qBrlpfSYQ=s64","userId":"00607095919891895402"}},"outputId":"86ac8532-1c31-4a9e-dc84-66ca6a4ef610"},"source":["# Или так:\n","for cl in inspect.getmro(IOError):\n","  print(cl)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'OSError'>\n","<class 'Exception'>\n","<class 'BaseException'>\n","<class 'object'>\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"g5S0h2-wKfGE"},"source":["## Задание 2"]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"orX7BUzcPKKf"},"source":["**Условие:** Для класса ```Manager``` из задания к занятию 2.8.2 установите все родительские классы. Убедитесь, что сам класс ```Manager``` является классом.\n","\n","**Оценка в баллах:** 3 "]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"ESSLfwqEPKKn"},"source":["**Решение:**"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"y8HOlaNLPKKq","colab":{"base_uri":"https://localhost:8080/","height":68},"executionInfo":{"status":"ok","timestamp":1594903860849,"user_tz":-180,"elapsed":1341,"user":{"displayName":"Ilia Konushok","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgUrzLbotAvEh6mMq5H6nX20COBH_r_qBrlpfSYQ=s64","userId":"00607095919891895402"}},"outputId":"e2e83285-3375-48dc-d3b3-f06524993706"},"source":["# Создаем класс сотрудников\n","class Person:\n","  # создаем атрибуты класса\n","  def __init__(self):\n","    self.name = 'Фамилия'\n","    self.job = 'Должность'\n","    self.pai = 'Зарплата'\n","\n","  # создание методов класса\n","  def person_raise(self, prcnt):\n","    vedomost = (int(pers1.pai), int(float(pers1.pai)*(1+prcnt)))\n","    pers1.pai = int(float(pers1.pai)*(1+prcnt)) # повышаем зарплату pers1\n","    print ('Новая зарплата:', pers1.pai)\n","\n","\n","# Создаем конкретный экземпляр класса\n","pers1 = Person()\n","pers1.name = \"Иванов\"\n","pers1.job = \"Программист\"\n","pers1.pai = \"100\"\n","print(pers1.name, pers1.job, pers1.pai)\n","\n","# Применяем метод  - индексируем зарплату \n","prcnt = 0.2\n","pers1.person_raise(prcnt)\n","\n","\n","# Создаем класс сотрудников\n","class Manager(Person):\n","  # добавляем атрибут класса\n","  def __init__(self):\n","    self.client_counts = 'Количество клиентов'\n","  \n","  # создание метода класса\n","  def manager_raise(self, clients_number, per_clent_index):\n","    vedomost_2 = (int(pers1.pai), int(float(pers1.pai) * ( 1 + clients_number*per_clent_index)))\n","    pers1.pai = int(float(pers1.pai) * ( 1 + clients_number*per_clent_index)) # повышаем зарплату pers1\n","    print ('Зарплата  после назначения менеджером: ', pers1.pai)\n","\n","# Применяем метод  - индексируем зарплату\n","manager1 = Manager()\n","clients_number = 10\n","per_clent_index = 0.01\n","manager1.manager_raise(clients_number, per_clent_index)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Иванов Программист 100\n","Новая зарплата: 120\n","Зарплата  после назначения менеджером:  132\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"t_BOmDxYp2wW","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"executionInfo":{"status":"ok","timestamp":1594903866089,"user_tz":-180,"elapsed":1846,"user":{"displayName":"Ilia Konushok","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgUrzLbotAvEh6mMq5H6nX20COBH_r_qBrlpfSYQ=s64","userId":"00607095919891895402"}},"outputId":"387e6f00-79a9-48d9-9fad-c6c6f84efceb"},"source":["print('Установим все родительские классы для класса Manager: ')\n","print(Manager.__bases__)\n","print(Person.__bases__ , \"<object> is \" , object.__doc__)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Установим все родительские классы для класса Manager: \n","(<class '__main__.Person'>,)\n","(<class 'object'>,) <object> is  The most base type\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2pNZWHyWu1il","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1594904798979,"user_tz":-180,"elapsed":748,"user":{"displayName":"Ilia Konushok","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgUrzLbotAvEh6mMq5H6nX20COBH_r_qBrlpfSYQ=s64","userId":"00607095919891895402"}},"outputId":"34cbcf92-7d88-4506-f386-21b88cb38bc1"},"source":["# или так:\n","print(inspect.getmro(Manager))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(<class '__main__.Manager'>, <class '__main__.Person'>, <class 'object'>)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LDGat-IOwOPk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"executionInfo":{"status":"ok","timestamp":1594905140041,"user_tz":-180,"elapsed":693,"user":{"displayName":"Ilia Konushok","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgUrzLbotAvEh6mMq5H6nX20COBH_r_qBrlpfSYQ=s64","userId":"00607095919891895402"}},"outputId":"c1c77e37-a65c-4dcf-e5a0-394c8fa6dae0"},"source":["# Или так:\n","for cl in inspect.getmro(Manager):\n","  print(cl)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class '__main__.Manager'>\n","<class '__main__.Person'>\n","<class 'object'>\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5z2HmTQf08Hr","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1594906378010,"user_tz":-180,"elapsed":662,"user":{"displayName":"Ilia Konushok","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgUrzLbotAvEh6mMq5H6nX20COBH_r_qBrlpfSYQ=s64","userId":"00607095919891895402"}},"outputId":"718c7028-b540-4ed2-9dde-f921085fbb07"},"source":["# Или так:\n","print(Manager.__mro__)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(<class '__main__.Manager'>, <class '__main__.Person'>, <class 'object'>)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"kiKkFcn6KQFA","colab_type":"text"},"source":["## Комментарии участника"]},{"cell_type":"code","metadata":{"id":"3aI3lBQVdvaY","colab_type":"code","colab":{}},"source":["_YOUR_COMMENT_ = 'All right!'"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TvzA7RQXcywE","colab_type":"text"},"source":["## Создание отчета"]},{"cell_type":"code","metadata":{"id":"y-d24eqmdn4x","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1594903873700,"user_tz":-180,"elapsed":1766,"user":{"displayName":"Ilia Konushok","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgUrzLbotAvEh6mMq5H6nX20COBH_r_qBrlpfSYQ=s64","userId":"00607095919891895402"}},"outputId":"9b4b5c9f-fe39-435a-f968-9dfb8316367a"},"source":["# Проверьте правильность заполнения полей выше и \n","# выполните данный код для создания отчета\n","# и сохранения его на локальную машину\n","from google.colab import files\n","import json\n","try:\n","  # form a report\n","  _HM_REPORT_ = {'Answers':_HOMEWORK_ANSWER_DICT_,\n","                'Comment':_YOUR_COMMENT_,\n","                'User':_NAME_SERNAME_,\n","                }\n","\n","  # create a report name\n","  _REPORT_NAME_ = 'HM_' +\\\n","                    _HOMEWORK_NAME_ + \\\n","                  '_by_' + \\\n","                  _NAME_SERNAME_['LAST_NAME'] + \\\n","                  '.json'\n","  \n","  # Save a report to a file\n","  f = open(_REPORT_NAME_,\"w\")\n","  f.write(json.dumps(_HM_REPORT_))\n","  f.close()\n","\n","  # Donwnload the file into a local host\n","  files.download(_REPORT_NAME_) \n","  print('Thanks for the work, {name}!'.format(name=_NAME_SERNAME_['NAME']))\n","except Exception as error:\n","   print(error)\n","   print('Something went wrong! Check the data entry and try again!')"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_a89bbe79-467c-46f8-b11e-16b232c405ec\", \"HM_2.8.3_LIGHT_by_KONUSHOK.json\", 91)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Thanks for the work, ILIA!\n"],"name":"stdout"}]}]}